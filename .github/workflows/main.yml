name: main

on:
  push:
    branches: [ "main", "es2023" ]
  pull_request:
    branches: [ "main", "es2023" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    defaults:
      run:
        shell: ${{ matrix.platform.shell }}
    
    strategy:
      fail-fast: false
      matrix:
        platform:
          - { name: "Linux (GCC)", artifact: "linux-x64", os: ubuntu-22.04, shell: bash }
          - { name: "macOS (Clang)", artifact: "macos-universal", os: macos-12, shell: bash, flags: "-GXcode -DCMAKE_OSX_ARCHITECTURES='arm64;x86_64' -DCMAKE_OSX_DEPLOYMENT_TARGET=10.13" }
          - { name: "Windows (MSVC)", artifact: "windows-x64", os: windows-2022, shell: pwsh, flags: "-A x64 -DUSE_MSVC_STATIC_RUNTIME=ON" }
          - { name: "Windows (GCC)", artifact: "windows-x64-mingw", os: windows-2022, shell: 'msys2 {0}', msystem: mingw64, msys-env: mingw-w64-x86_64 }
          # - { name: Windows, os: windows-2022, shell: pwsh, flags: "-A x64" }

    steps:
    - name: Set up MSYS2
      if: matrix.platform.shell == 'msys2 {0}'
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.platform.msystem }}
        install: >-
          ${{ matrix.platform.msys-env }}-gcc
          ${{ matrix.platform.msys-env }}-cmake
          ${{ matrix.platform.msys-env }}-ninja
          ${{ matrix.platform.msys-env }}-pkg-config

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{ matrix.platform.flags }}

    - name: Build
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Install
      run: cmake --install build --config ${{env.BUILD_TYPE}} --prefix dist

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.platform.artifact }}
        path: dist
